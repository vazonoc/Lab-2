import math #Цей рядок коду імпортує модуль math, який містить різноманітні математичні функції і константи.

tasks = []#Цей рядок коду створює порожній список з назвою tasks. У цьому списку будуть зберігатися дані для кожної задачі.
while True: #Цей рядок коду починає цикл, який продовжуватиметься, поки умова True виконується
    a = float(input("Enter the 'a' number (or enter '0' to finish): ")) #Цей рядок коду вимагає від користувача ввести значення для змінної a. Функція input використовується для зчитування введеного користувачем рядка з клавіатури, а функція float перетворює цей рядок на десяткове число.
    if a == 0: #Цей рядок коду перевіряє, чи введене значення a дорівнює 0. 
        break # Якщо умова if виконується, то за допомогою команди break виконання циклу зупиняється, і керування переходить до наступного рядка коду після циклу.
    m = float(input("Enter the 'm' number: ")) #Цей рядок коду вимагає від користувача ввести значення для змінної m.
    b = float(input("Enter the 'b' number: ")) #Цей рядок коду вимагає від користувача ввести значення для змінної b.
    tasks.append((a, m, b)) #Цей рядок коду додає (a, m, b) до списку tasks.

E_total = sum((a + 4 * m + b) / 6 for a, m, b in tasks)#Цей рядок коду обчислює значення E_total.Використовується генератор списку, щоб обчислити цю суму.
SD_total = sum((b - a) ** 2 / 36 for a, m, b in tasks)#Цей рядок коду обчислює значення SD_total.Використовується генератор списку, щоб обчислити цю суму.

CI_min = E_total - 2 * math.sqrt(SD_total)#Цей рядок коду обчислює нижню межу інтервалу 95%.
CI_max = E_total + 2 * math.sqrt(SD_total)#Цей рядок коду обчислює верхню межу інтервалу 95%

print(f"Project's 95% confidence interval: {CI_min:.2f} ... {CI_max:.2f} points")#Цей рядок виводить результат на екран.
